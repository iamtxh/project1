apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'idea'
//apply plugin: 'org.junit.platform.gradle.plugin'
 
mainClassName = 'hello.HelloWorld'

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
	}
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '4.12.0-M4'
ext.junitPlatformVersion = '1.0.0-M4'
ext.junitJupiterVersion  = '5.0.0-M4'
ext.log4jVersion         = '2.6.2'
 
jar {
    baseName = 'gs-gradle'
    version =  '0.1.0'
}
 
compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	options.compilerArgs += '-parameters'
}

dependencies {
    compile "joda-time:joda-time:2.2"
    //classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
    // JUnit Jupiter API and TestEngine implementation
	testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

	// If you also want to support JUnit 3 and JUnit 4 tests
	testCompile("junit:junit:${junit4Version}")
	testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")

	testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
}
 
task wrapper(type: Wrapper) {
    	description = 'Generates gradlew[.bat] scripts'
	gradleVersion = '3.0'
}

